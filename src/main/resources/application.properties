#設定JSP配置
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# DataSource配置
spring.datasource.url=jdbc:mysql://localhost:3306/yachi?useUnicode=yes&amp&characterEncoding=utf8&amp&useSSL=false&amp&serverTimezone=Asia/Taipei&amp&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=0972703983
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#----------------------JPA配置------------------------------
# 要操作的目標資料庫，預設自動檢測。也可以通過 databasePlatform 屬性進行設定。
spring.jpa.database = MYSQL
# 使用的資料庫平台, 我們用的是MySQL 8.0
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# 顯示SQL
spring.jpa.show-sql = true
# 格式化SQL
spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.hibernate.ddl-auto:
# 指的是服務起來時要用何種方式執行ddl指令, 有create, update, create-drop 等形式。
# create: 啟動時建立Table, 下次啟動會覆蓋上次的, 故會造成資料遺失
# update: 若無Table則啟動時建立, 若有則視有無變更自動Update
# create-drop:啟動時建立Table, 當次Session關閉則刪除
spring.jpa.hibernate.ddl-auto=update
# 儲存方式, MySQL有很多種, 預設為MyISAM, 我們使用的是innodb
# MyISAM: Select速度快, 佔用空間小, 不支援Transaction
# innodb: 佔用空間較大, 支援Transaction, 發生錯誤時可直接Rollback
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
# 命名規範(必須)：Hibernate 命名策略的全限定類名。
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# 顯示SQL語法的查詢條件的值
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



# 解決問題 Failed to convert from type [java.lang.String] 
# to type [@javax.persistence.Temporal java.util.Date]
spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss
spring.mvc.format.time=HH:mm:ss

#spring boot 上傳文件大小限制
spring.http.multipart.max-file-size=1024MB
spring.http.multipart.max-request-size=1024MB

#開啟mvc的HiddenHttpMethodFilter，以便表單可以發送PUT、DELETE等請求
spring.mvc.hiddenmethod.filter.enabled=true

#springboot使用hibernate的SessionFactory的配置
#@PersistenceContext
#	protected EntityManager em;
#	private Session getCurrentSession() {
#	    Session session = em.unwrap( Session.class );
#	    return session;
#	}
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

